name: Release (all tags)
run-name: Release (all tags) - Release ${{ github.ref_name }}

on:
  push:
    tags:
      - "*.*.*"
      - "*.*.*b*"

env:
  # "preprod" registry
   DOCKER_PREPROD_REPO: "nwodtuhs/exegol-preprod"
  # final "production" registry target
   DOCKER_PROD_REPO: "nwodtuhs/exegol"

  # "preprod" registry for the misc images
   MISC_DOCKER_PREPROD_REPO: "nwodtuhs/exegol-misc-preprod"
  # final "production" registry target for misc images
   MISC_DOCKER_PROD_REPO: "nwodtuhs/exegol-misc"

jobs:
  init:
    name: Initialize
    runs-on: self-hosted
    outputs:
      DOCKER_PREPROD_REPO: ${{ steps.varset.outputs.DOCKER_PREPROD_REPO }}
      DOCKER_PROD_REPO: ${{ steps.varset.outputs.DOCKER_PROD_REPO }}
      MISC_DOCKER_PREPROD_REPO: ${{ steps.varset.outputs.MISC_DOCKER_PREPROD_REPO }}
      MISC_DOCKER_PROD_REPO: ${{ steps.varset.outputs.MISC_DOCKER_PROD_REPO }}
    steps:
      - name: Passing workflow env vars to reusable workflows
        id: varset
        run: |
          echo "DOCKER_PREPROD_REPO=${{ env.DOCKER_PREPROD_REPO }}" >> $GITHUB_OUTPUT
          echo "DOCKER_PROD_REPO=${{ env.DOCKER_PROD_REPO }}" >> $GITHUB_OUTPUT
          echo "MISC_DOCKER_PREPROD_REPO=${{ env.MISC_DOCKER_PREPROD_REPO }}" >> $GITHUB_OUTPUT
          echo "MISC_DOCKER_PROD_REPO=${{ env.MISC_DOCKER_PROD_REPO }}" >> $GITHUB_OUTPUT
  release_misc:
    name: Publish misc manifests
    needs: init
    strategy:
      matrix:
        tag: [ "base" ]
        version: [ '', "-${{ github.ref_name }}" ]
    uses: ./.github/workflows/sub_release_manifest.yml
    with:
      DOCKER_PREPROD_REPO: ${{ needs.init.outputs.MISC_DOCKER_PREPROD_REPO }}
      PREPROD_MANIFEST_LIST: ${{ needs.init.outputs.MISC_DOCKER_PREPROD_REPO }}:${{ matrix.tag }}${{ matrix.version }}
      PROD_MANIFEST_LIST: ${{ needs.init.outputs.MISC_DOCKER_PROD_REPO }}:${{ matrix.tag }}${{ matrix.version }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  clean_misc_registry:
    name: Clean misc preprod registry
    needs: release_misc
    runs-on: self-hosted
    # only cleaning if release was a success.
    strategy:
      matrix:
        tag: [ "base" ]
        version: [ '', "-${{ github.ref_name }}" ]
    steps:
      - name: Remove remote arch-specific images in ${{ env.MISC_DOCKER_PREPROD_REPO }}
        # ex: curl [...] --request DELETE [...]exegol-misc-preprod/tags/base
        # ex: curl [...] --request DELETE [...]exegol-misc-preprod/tags/base-1.2.3
        run: |
          HUB_TOKEN=$(curl --silent --header "Content-Type: application/json" --request POST --data "{\"username\": \"${{ secrets.DOCKER_USERNAME }}\", \"password\": \"${{ secrets.DOCKER_PASSWORD }}\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          curl --fail-with-body --include --request DELETE -H "Accept: application/json" --header "Authorization: JWT $HUB_TOKEN" https://hub.docker.com/v2/repositories/${{ env.MISC_DOCKER_PREPROD_REPO }}/tags/${{ matrix.tag }}${{ matrix.version }}/

  release:
    name: Publish manifest
    needs: init
    strategy:
      matrix:
        tag: [ "full", "light", "ad", "web", "osint" ]
        version: ['', "-${{ github.ref_name }}"]
    uses: ./.github/workflows/sub_release_manifest.yml
    with:
      DOCKER_PREPROD_REPO: ${{ needs.init.outputs.DOCKER_PREPROD_REPO }}
      PREPROD_MANIFEST_LIST: ${{ needs.init.outputs.DOCKER_PREPROD_REPO }}:${{ matrix.tag }}${{ matrix.version }}
      PROD_MANIFEST_LIST: ${{ needs.init.outputs.DOCKER_PROD_REPO }}:${{ matrix.tag }}${{ matrix.version }}
    secrets:
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

  clean_registry:
    name: Clean preprod registry
    needs: release
    runs-on: self-hosted
    # only cleaning if release was a success.
    strategy:
      matrix:
        tag: [ "full", "light", "ad", "web", "osint" ]
        version: [ '', "-${{ github.ref_name }}" ]
    steps:
      - name: Remove remote arch-specific images in ${{ env.DOCKER_PREPROD_REPO }}
        # ex: curl [...] --request DELETE [...]exegol-preprod/tags/full
        # ex: curl [...] --request DELETE [...]exegol-preprod/tags/full-1.2.3
        run: |
          HUB_TOKEN=$(curl --silent --header "Content-Type: application/json" --request POST --data "{\"username\": \"${{ secrets.DOCKER_USERNAME }}\", \"password\": \"${{ secrets.DOCKER_PASSWORD }}\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          curl --fail-with-body --include --request DELETE -H "Accept: application/json" --header "Authorization: JWT $HUB_TOKEN" https://hub.docker.com/v2/repositories/${{ env.DOCKER_PREPROD_REPO }}/tags/${{ matrix.tag }}${{ matrix.version }}/