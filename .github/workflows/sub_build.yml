name: (level 2 sub) Build

on:
  workflow_call:
    inputs:
      DOCKER_BUILD_REPO:
        required: true
        type: string
      IMAGE_BASE_NAME:
        required: true
        type: string
      IMAGE_VERSION:
        required: false
        default: ''
        type: string
      DOCKERFILE:
        required: true
        type: string
      ARCH:
        required: true
        type: string

jobs:
  buildx:
    name: Build ${{ inputs.ARCH }}
    timeout-minutes: 360
    runs-on:
      - self-hosted
      - builder
      - ${{ inputs.ARCH }}
    steps:
      - name: Pre Build list images
        run: docker image ls -a
      - name: Pre Build list containers
        run: docker ps
      - name: Checkout
        uses: actions/checkout@v3
      - name: Prepare build
        # Preparing variables used for tagging the image to build
        id: prepare
        env:
          DOCKER_BUILD_REPO: ${{ inputs.DOCKER_BUILD_REPO }}
          IMAGE_BASE_NAME: ${{ inputs.IMAGE_BASE_NAME }}
          IMAGE_VERSION: ${{ inputs.IMAGE_VERSION }}
          ARCH: ${{ inputs.ARCH }}
        run: |
          echo "IMAGE_FULL_NAME=${DOCKER_BUILD_REPO}:${IMAGE_BASE_NAME}-${ARCH}" >> $GITHUB_OUTPUT
          echo "IMAGE_VERSION=${IMAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")" >> $GITHUB_OUTPUT
          cat $GITHUB_OUTPUT
      - name: Build and load the image
        if: success()
        uses: docker/build-push-action@v4
        with:
          load: true
          no-cache: true
          build-args: |
            TAG=${{ inputs.IMAGE_BASE_NAME }}
            VERSION=${{ steps.prepare.outputs.IMAGE_VERSION }}
            BUILD_DATE=${{ steps.prepare.outputs.BUILD_DATE }}
          tags: ${{ steps.prepare.outputs.IMAGE_FULL_NAME }}
          platforms: linux/${{ inputs.ARCH }}
          file: ${{ inputs.DOCKERFILE }}
          context: .
      - name: Post Build list images
        run: docker image ls -a
      - name: Post Build list containers
        run: docker ps
      - name: Post Build inspect built image
        run: docker inspect ${{ steps.prepare.outputs.IMAGE_FULL_NAME }}
