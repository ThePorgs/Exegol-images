on:
  workflow_call:
    inputs:
      DOCKER_BUILD_REPO:
        required: true
        type: string
      DOCKER_TARGET_REPO:
        required: true
        type: string
      IMAGE_BASE_NAME:
        required: true
        type: string
      DOCKERFILE:
        required: true
        type: string
      SUPPORTED_ARCH:
        required: true
        type: string
    secrets:
      DOCKER_PASSWORD:
        required: true
      DOCKER_USERNAME:
        required: true

jobs:
  debug:
    runs-on: self-hosted
    outputs:
      data: ${{ steps.set-matrix.outputs.data }}
    steps:
      -
        id: set-matrix
        name: "Setup output"
        run: |
          echo "data={\"include\":[{\"arch\":\"amd64\"},{\"arch\":\"arm64\"}]}"
          echo "data={\"include\":[{\"arch\":\"amd64\"},{\"arch\":\"arm64\"}]}" >> $GITHUB_OUTPUT

  build_tests:
    name: Builds & tests
    needs: debug
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.debug.outputs.data) }}
    uses: ./.github/workflows/building.yml
    with:
      DOCKER_BUILD_REPO: ${{ inputs.DOCKER_BUILD_REPO }}
      IMAGE_BASE_NAME: ${{ inputs.IMAGE_BASE_NAME }}
      DOCKERFILE: ${{ inputs.DOCKERFILE }}
      ARCH: ${{ matrix.arch }}
    secrets: inherit

  manifest_build:
    timeout-minutes: 60
    needs: build_tests
    runs-on: self-hosted
    if: ${{ always() && !contains(needs.*.result, 'failure') && !contains(needs.*.result, 'cancelled') }}
    env:
      DOCKER_BUILD_REPO: ${{ inputs.DOCKER_BUILD_REPO }}
      DOCKER_TARGET_REPO: ${{ inputs.DOCKER_TARGET_REPO }}
      IMAGE_BASE_NAME: ${{ inputs.IMAGE_BASE_NAME }}
    steps:
      - name: Login to Dockerhub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create and push manifest
        if: success()
        run: |
          echo "Create manifest for $archs"
          docker manifest create ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME} ${DOCKER_BUILD_REPO}:${IMAGE_BASE_NAME}-arm64 ${DOCKER_BUILD_REPO}:${IMAGE_BASE_NAME}-amd64
          docker manifest push ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME}
          docker manifest rm ${DOCKER_TARGET_REPO}:${IMAGE_BASE_NAME}
      - name: Remove intermediate images
        run: |
          HUB_TOKEN=$(curl -s -H "Content-Type: application/json" -X POST -d "{\"username\": \"${{ secrets.DOCKER_USERNAME }}\", \"password\": \"${{ secrets.DOCKER_PASSWORD }}\"}" https://hub.docker.com/v2/users/login/ | jq -r .token)
          curl -i -X DELETE -H "Accept: application/json" -H "Authorization: JWT $HUB_TOKEN" https://hub.docker.com/v2/repositories/${DOCKER_BUILD_REPO}/tags/${IMAGE_BASE_NAME}-arm64/
          curl -i -X DELETE -H "Accept: application/json" -H "Authorization: JWT $HUB_TOKEN" https://hub.docker.com/v2/repositories/${DOCKER_BUILD_REPO}/tags/${IMAGE_BASE_NAME}-amd64/
